# 1) Среда сборки под Windows
FROM golang:1.24 AS builder
# Установим MinGW-w64 и инструменты сборки
RUN apt-get update && apt-get install -y \
build-essential pkg-config curl autoconf automake libtool cmake make zip \
mingw-w64 gcc-mingw-w64 g++-mingw-w64
WORKDIR /build

# 2) Сборка libjpeg-turbo статически с патчем CMakeLists.txt
RUN cd /build && \
    curl -L \
    https://github.com/libjpeg-turbo/libjpeg-turbo/archive/refs/tags/2.0.6.tar.gz \
    --output libjpeg-turbo-2.0.6.tar.gz && \
    tar -xzf libjpeg-turbo-2.0.6.tar.gz && \
    cd libjpeg-turbo-2.0.6 && \
    # Исправляем ошибку в CMakeLists.txt
    sed -i '43s/string(/string(CONCAT CMAKE_REQUIRED_LIBRARIES/' CMakeLists.txt && \
    mkdir build && \
    cd build && \
    cmake \
      -G"Unix Makefiles" \
      -DCMAKE_SYSTEM_NAME=Windows \
      -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
      -DCMAKE_INSTALL_PREFIX=/opt/mingw64 \
      -DENABLE_SHARED=OFF \
      -DENABLE_STATIC=ON \
      -DWITH_SIMD=OFF \
      -DCMAKE_C_FLAGS="-O3" \
      .. && \
    make -j"$(nproc)" && \
    make install

# 3) Сборка libtiff статически
RUN curl -L \
    https://download.osgeo.org/libtiff/tiff-4.5.1.tar.gz \
    -o tiff-4.5.1.tar.gz && \
    tar -xzf tiff-4.5.1.tar.gz && \
    cd tiff-4.5.1 && \
    ./configure \
      --host=x86_64-w64-mingw32 \
      --prefix=/opt/mingw64 \
      --disable-shared \
      --enable-static \
      CC=x86_64-w64-mingw32-gcc \
      CFLAGS="-O3" && \
    make -j"$(nproc)" && make install

# 4) Создаем файлы .pc для pkg-config
RUN mkdir -p /opt/mingw64/lib/pkgconfig && \
    echo 'prefix=/opt/mingw64\n\
exec_prefix=${prefix}\n\
libdir=${exec_prefix}/lib\n\
includedir=${prefix}/include\n\
\n\
Name: libjpeg\n\
Description: JPEG library\n\
Version: 2.0.6\n\
Libs: -L${libdir} -ljpeg\n\
Cflags: -I${includedir}\n' > /opt/mingw64/lib/pkgconfig/libjpeg.pc && \
    echo 'prefix=/opt/mingw64\n\
exec_prefix=${prefix}\n\
libdir=${exec_prefix}/lib\n\
includedir=${prefix}/include\n\
\n\
Name: libtiff-4\n\
Description: TIFF library\n\
Version: 4.5.1\n\
Libs: -L${libdir} -ltiff\n\
Cflags: -I${includedir}\n' > /opt/mingw64/lib/pkgconfig/libtiff-4.pc

# 5) Сборка Go-приложения
WORKDIR /app
COPY . .
# Переменные окружения для кросс-компиляции cgo и линковки
ENV GOOS=windows
ENV GOARCH=amd64
ENV CGO_ENABLED=1
ENV CC=x86_64-w64-mingw32-gcc
ENV CGO_CFLAGS="-I/opt/mingw64/include"
ENV CGO_LDFLAGS="-L/opt/mingw64/lib -ljpeg -ltiff"
ENV PKG_CONFIG_PATH="/opt/mingw64/lib/pkgconfig"
ENV PKG_CONFIG_LIBDIR="/opt/mingw64/lib/pkgconfig"

RUN go mod download
RUN go build -tags cgo -o converter.exe ./cmd/main.go

# 6) Минимальный финальный образ
FROM scratch
COPY --from=builder /app/converter.exe /converter.exe
ENTRYPOINT ["/converter.exe"]